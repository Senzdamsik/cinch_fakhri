steps:
  # Step 1: Validate Service Account Key with Enhanced Error Handling
  - id: 'fetch-sa-key'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Fetch service account key with error handling
        gcloud secrets versions access latest --secret=sa-key > /workspace/sa-key.json || exit 1
        
        # Validate JSON structure with a simple check
        if [ ! -s /workspace/sa-key.json ]; then
          echo "ERROR: Service account key file is empty!"
          exit 1
        fi
        
        if ! grep -q "client_email" /workspace/sa-key.json; then
          echo "ERROR: Invalid service account key file!"
          exit 1
        fi
        
        # Print out the client email for verification
        echo "Service Account Client Email:"
        grep -o '"client_email": *"[^"]*"' /workspace/sa-key.json
        
        # Ensure correct permissions
        chmod 600 /workspace/sa-key.json

  # Step 2: Fetch Database Password Only
  - id: 'fetch-db-password'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=DB_PASSWORD > /workspace/db_password.txt
        # Use hardcoded values for non-sensitive configuration
        echo "35.240.241.62" > /workspace/db_host.txt
        echo "postgres" > /workspace/db_user.txt
        echo "test_cinch" > /workspace/db_name.txt

  # Step 3: Run Database Migrations
  - id: 'build-migration-image'
    name: 'docker'
    args:
      - 'build'
      - '-t'
      - 'migration-image'
      - '-f'
      - 'Dockerfile.migration'
      - '.'
    
  - id: 'run-migrations'
    name: 'migration-image'
    env:
      - 'DATABASE_URL=postgresql://postgres:$(cat /workspace/db_password.txt)@/test_cinch?host=/cloudsql/speedy-area-192702:asia-southeast1:test-cinch'
      - 'POSTGRES_USER=postgres'
      - 'POSTGRES_PASSWORD=$(cat /workspace/db_password.txt)'
      - 'POSTGRES_DB=test_cinch'
      - 'POSTGRES_HOST=/cloudsql/speedy-area-192702:asia-southeast1:test-cinch'
      - 'POSTGRES_PORT=5432'
    wait_for: ['cloud-sql-proxy']

  # Step 4: Cloud SQL Proxy Setup
  - id: 'cloud-sql-proxy'
    name: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.0'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cloud-sql-proxy \
          --credentials-file=/workspace/sa-key.json \
          --port=5432 \
          speedy-area-192702:asia-southeast1:test-cinch
    wait_for: ['run-migrations']

  # Step 5: Database Seeding
  - id: 'build-db-seed-image'
    name: 'docker'
    args:
      - 'build'
      - '-t'
      - 'db-seed-image'
      - '-f'
      - 'Dockerfile.db-seed'
      - '.'
    
  - id: 'run-db-seed'
    name: 'db-seed-image'
    env:
      - 'PGHOST=localhost'
      - 'PGPORT=5432'
      - 'PGUSER=postgres'
      - 'PGDATABASE=test_cinch'
      - 'PGPASSWORD=$(cat /workspace/db_password.txt)'
    wait_for: ['cloud-sql-proxy']

  # Step 6: Build Application Image
  - id: 'build-app-image'
    name: 'docker'
    args:
      - 'build'
      - '-t'
      - 'asia-southeast1-docker.pkg.dev/${PROJECT_ID}/cinch-fakhri-repo/app:${SHORT_SHA}'
      - '.'

  # Step 7: Push Image to Artifact Registry
  - id: 'push-app-image'
    name: 'docker'
    args:
      - 'push'
      - 'asia-southeast1-docker.pkg.dev/${PROJECT_ID}/cinch-fakhri-repo/app:${SHORT_SHA}'

  # Step 8: Deploy to Cloud Run
  - id: 'deploy-to-cloud-run'
    name: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'cinch-fakhri-service'
      - '--image'
      - 'asia-southeast1-docker.pkg.dev/${PROJECT_ID}/cinch-fakhri-repo/app:${SHORT_SHA}'
      - '--region'
      - 'asia-southeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - 'speedy-area-192702:asia-southeast1:test-cinch'
      - '--set-env-vars'
      - 'DATABASE_URL=postgresql://postgres:$(cat /workspace/db_password.txt)@/test_cinch?host=/cloudsql/speedy-area-192702:asia-southeast1:test-cinch,POSTGRES_USER=postgres,POSTGRES_PASSWORD=$(cat /workspace/db_password.txt),POSTGRES_DB=test_cinch,POSTGRES_HOST=/cloudsql/speedy-area-192702:asia-southeast1:test-cinch'

options:
  logging: CLOUD_LOGGING_ONLY 