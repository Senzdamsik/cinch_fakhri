version: '3.8'

services:
  app:
    build: .
    ports:
      - "${API_PORT}:8000"
    env_file:
      - .env.docker
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db/test-cinch
    command: >
      sh -c "
        while ! pg_isready -h db -p ${POSTGRES_PORT} -U ${POSTGRES_USER}; do
          echo 'Waiting for database to be ready'
          sleep 1
        done &&
        echo 'Database is ready' &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    networks:
      - cinch-network

  db:
    build:
      context: .
      dockerfile: Dockerfile.db
    ports:
      - "5433:${POSTGRES_PORT}"
    env_file:
      - .env.docker
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - .:/app
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./scripts/populate_tables.sql:/app/scripts/populate_tables.sql
      - ./scripts/seed_test_data.sql:/app/scripts/seed_test_data.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - cinch-network

volumes:
  postgres_data:

networks:
  cinch-network:
    driver: bridge 